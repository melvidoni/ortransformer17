package gui.components;


import javafx.fxml.FXML;
import javafx.geometry.Insets;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.SplitPane;
import javafx.scene.control.Tab;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.ColumnConstraints;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.RowConstraints;
import transformations.ort.TransformationStatus;


/**
 * Class that controls the Tab included on the main TabPane, that has
 * the scripts information generated by the transformation.
 * @see Tab
 * @author Melina Vidoni, INGAR CONICET-UTN.
 */
public class ScriptTab extends Tab {
    private SplitPane splitPane;
    private ScrollPane scrollTypes;
    private ScrollPane scrollTables;




    /**
     * Default constructor of the component.
     */
    public ScriptTab() {
        // Prepare the split pane
        splitPane = new SplitPane();
        setContent(splitPane);

        // Start the scrolltypes pane
        newModel();
        splitPane.getItems().setAll(scrollTypes, scrollTables);

        // Add the title and image
        this.setText("SQL Scripts");
        this.setGraphic(new ImageView(new Image("/gui/views/img/icon_script.png")));

        // Allow for this to be closed and add the listeners
        this.setClosable(true);
    }




    /**
     * Method that clears the scrollpanes to remove their content
     * and allow a new model to be created.
     */
    private void newModel() {
        // Start the scrolltypes pane
        scrollTypes = new ScrollPane();
        scrollTypes.setFitToWidth(true);
        scrollTypes.setFitToHeight(true);
        scrollTypes.setHbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);
        scrollTypes.setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);
        scrollTypes.setMinWidth(200);
        SplitPane.setResizableWithParent(scrollTypes, Boolean.FALSE);

        // Start the scrolltables pane
        scrollTables = new ScrollPane();
        scrollTables.setFitToHeight(true);
        scrollTables.setFitToWidth(true);
        scrollTables.setHbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);
        scrollTables.setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);
        scrollTables.setMinWidth(200);
        SplitPane.setResizableWithParent(scrollTables, Boolean.FALSE);
    }


    /**
     * Method that loads the scripts inside the
     * corresponding panes.
     */
    public void showGeneratedScripts() {
        // Get the transformation status
        TransformationStatus tStatus = TransformationStatus.getInstance(false);

        // Load the types on a label
        Label typesLabel = new Label(tStatus.getTypesScript());
        typesLabel.setWrapText(true);
        typesLabel.setPadding(new Insets(10,10,10,10));
        scrollTypes.setContent(new Pane(typesLabel));

        // Load the tables on a Label
        Label tablesLabel = new Label(tStatus.getTablesScript());
        tablesLabel.setWrapText(true);
        tablesLabel.setPadding(new Insets(10,10,10,10));
        scrollTables.setContent(new Pane(tablesLabel));
    }
}
